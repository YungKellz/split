import React from 'react';
import { EMentionType, ICheck, IParty } from '../../typings';
import { getPersonInfo, getPersonsInfoInCheck } from '../../utils';
import styles from './styles.module.css';
import { currency } from '../../mockData';
import { SummaryTable } from '../SummaryTable';

interface ILocalCheck {
  check: ICheck;
  party: Pick<IParty, 'persons' | 'partyPersonsAmount'>; // TODO: –ü—Ä–æ–∫–∏–Ω—É—Ç—å —á–µ—Ä–µ–∑ —Å—Ç–æ—Ä
  index: number;
}

/** –ö–∞—Ä—Ç–æ—á–∫–∞ —á–µ–∫–∞ */
export function Check({ check, party, index }: ILocalCheck) {
  const { title, personsPaid = [], personsMentioned, mentionType } = check;
  const { persons = [], partyPersonsAmount } = party;
  // –∑–∞–≥–æ–ª–æ–≤–æ–∫ —á–µ–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  const defaultTitle = `–ß–µ–∫ ‚Ññ${index + 1}`;

  // —Å—É–º–º–∞ –∑–∞ —á–µ–∫
  const summary = personsPaid.reduce(
    (previousValue, { amount }) => previousValue + (amount || 0),
    0,
  );
  // –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —á–µ–∫–µ –∏ –∏—Ö —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω
  const personsInfo = getPersonsInfoInCheck(
    mentionType,
    personsMentioned,
    partyPersonsAmount,
    persons,
  );
  return (
    <div className={styles.checkContainer}>
      <span className={styles.title}>{title || defaultTitle}</span>
      <span>
        –°—É–º–º–∞: {summary}
        {currency}
      </span>
      <span>
        –ú–µ—Ç–æ–¥ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —á–µ–∫–∞:{' '}
        {mentionType === EMentionType.everybody
          ? '–í—Å–µ'
          : mentionType === EMentionType.include
            ? `–¢–æ–ª—å–∫–æ ${personsInfo.personsNamesList}`
            : `–í—Å–µ –∫—Ä–æ–º–µ ${personsInfo.personsExcludedNamesList}`}
      </span>
      {personsInfo.personsAmount !== partyPersonsAmount ? (
        <span>
          –£—á–∞—Å—Ç–≤—É—é—Ç {personsInfo.personsAmount}/{partyPersonsAmount} ({personsInfo.personsNamesList}
          )
        </span>
      ) : null}

      {personsPaid.map(({ personId, amount, description }, index) => {
        const personInfo = getPersonInfo(persons, personId);
        return (
          <div key={`person_paid_id_${personInfo.id}_${index}`}>
            üë≥üèª‚Äç‚ôÇÔ∏è {personInfo.name} –≤–∫–∏–Ω—É–ª {amount}
            {currency}
            {description ? ` (${description})` : undefined}
          </div>
        );
      })}
      <SummaryTable partyPersonsAmount={partyPersonsAmount} persons={persons} checks={check} />
    </div>
  );
}
